% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapping.R
\name{parse_mapping}
\alias{parse_mapping}
\title{Parse Mapping}
\usage{
parse_mapping(py_gilda_res_list, ...)
}
\arguments{
\item{py_gilda_res_list}{A named list of term mapping lists (see
\code{\link[=parse_term_mapping]{parse_term_mapping()}}), likely generated by \code{\link[=pyobo_map]{pyobo_map()}}.}

\item{...}{
  Arguments passed on to \code{\link[=extract_ScoredMatch]{extract_ScoredMatch}}, \code{\link[=parse_term_mapping]{parse_term_mapping}}
  \describe{
    \item{\code{prefix}}{\emph{Optional} prefix to add to namespace local unique identifiers
(LUI; e.g. 4, the LUI for "disease" in DO), as a string; preferably to
create a complete namespace ID (e.g. "DOID:4").}
    \item{\code{prefix_sep}}{\emph{Optional} separator placed between \code{prefix} and
namespace LUIs, as a string. Ignored if \code{prefix = NULL}.}
    \item{\code{best_only}}{Whether to return the best scoring result(s) only, as a
boolean. \code{FALSE} will return all results. \strong{NOTE:} \code{TRUE} will return
more than one result in the case of ties.}
    \item{\code{warn_best_gt1}}{Whether to warn that best mapping ties exist for
a term.}
  }}
}
\value{
List of data frames with the mapping result(s) for each term.
}
\description{
Parses mappings generated by \code{\link[=pyobo_map]{pyobo_map()}} or otherwise produced by the
python module \href{https://gilda.readthedocs.io/en/latest/}{GILDA}.
}
