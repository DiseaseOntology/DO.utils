% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/robot_wrappers.R
\name{robot_query}
\alias{robot_query}
\title{Execute a SPARQL Query with ROBOT}
\usage{
robot_query(
  input,
  query,
  output = NULL,
  ...,
  tidy_what = "nothing",
  col_types = NULL
)
}
\arguments{
\item{input}{The path to an RDF/OWL file recognized by ROBOT, as a string.}

\item{query}{The text for or path to a valid SPARQL query (\code{ASK}, \code{SELECT},
\code{CONSTRUCT}, or \code{UPDATE}) as a string.}

\item{output}{The path where output will be written, as a string, or \code{NULL}
(default) to load data directly. \code{output} is required for \code{UPDATE} and
\code{CONSTRUCT} queries.}

\item{...}{Additional arguments to
\href{http://robot.obolibrary.org/query}{ROBOT query} formatted as described in
\code{\link[=robot]{robot()}}.}

\item{tidy_what}{The elements of a SPARQL-created data.frame to tidy, as a
character vector. One or more of the following:
\itemize{
\item \code{"everything"} to apply all tidy operations (has precedence over
\code{"nothing"}).
\item \code{"header"} to remove leading \verb{?} from header labels.
\item \code{"unnest"} to unnest list columns with \code{\link[=unnest_cross]{unnest_cross()}}.
\item \code{"uri_to_curie"} to convert all URIs recognized by DO.utils to CURIEs with
\code{\link[=to_curie]{to_curie()}}.
\item \code{"lgl_NA_false"} to replace \code{NA} in logical columns with \code{FALSE}.
\item \code{"as_tibble"} to make the output a \link[tibble:tibble]{tibble}.
\item \code{"rm_lang_tag"} to remove language tags. Tags will only be removed from
\code{character} class columns, and then only if there is one unique language tag
in the given column.
\item \code{"nothing"} to prevent all tidying.
}}

\item{col_types}{One of \code{NULL}, a \code{\link[readr:cols]{cols()}} specification, or
a string. See \code{vignette("readr")} for more details.

If \code{NULL}, all column types will be inferred from \code{guess_max} rows of the
input, interspersed throughout the file. This is convenient (and fast),
but not robust. If the guessed types are wrong, you'll need to increase
\code{guess_max} or supply the correct types yourself.

Column specifications created by \code{\link[=list]{list()}} or \code{\link[readr:cols]{cols()}} must contain
one column specification for each column. If you only want to read a
subset of the columns, use \code{\link[readr:cols_only]{cols_only()}}.

Alternatively, you can use a compact string representation where each
character represents one column:
\itemize{
\item c = character
\item i = integer
\item n = number
\item d = double
\item l = logical
\item f = factor
\item D = date
\item T = date time
\item t = time
\item ? = guess
\item _ or - = skip
}

By default, reading a file without a column specification will print a
message showing what \code{readr} guessed they were. To remove this message,
set \code{show_col_types = FALSE} or set `options(readr.show_col_types = FALSE).}
}
\value{
If \code{output} is specified, the path to the output file with the query result.
Otherwise, the query result (ASK as boolean or SELECT as \code{tibble}).
}
\description{
Wrapper for \code{robot("query", ...)} that accepts a file \emph{or} text query, and
has more convenient arguments.
}
\seealso{
\code{\link[=robot]{robot()}} for underlying implementation.
}
