% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{obo_ID_predicates}
\alias{obo_ID_predicates}
\alias{is_valid_obo}
\alias{is_valid_obo_prop}
\alias{is_valid_doid}
\title{OBO ID predicates}
\usage{
is_valid_obo(x)

is_valid_obo_prop(x)

is_valid_doid(x, strict = FALSE)
}
\arguments{
\item{x}{A set of IDs, as a character vector.}

\item{strict}{Whether to enforce the DOID format strictly, as a boolean. If
\code{FALSE} (default), the \code{DOID_4} format without the \verb{obo:} prefix will be
allowed.}
}
\description{
These predicates are designed to identify and validate common ID formats
defined within OBO Foundry ontologies.
}
\details{
\itemize{
\item \code{is_valid_obo()} to determine if identifiers match the OBO Foundry IRI
pattern or are an obo:LUI CURIE.
\item \code{is_valid_doid()} to determine if identifiers match DO's IRI or CURIE
pattern.
}
}
\section{Notes}{

These predicates \emph{do not} attempt to confirm any ID actually exists in an
OBO Foundry ontology, but only test if the IDs are syntactically formatted
correctly (see \href{https://obofoundry.org/id-policy}{OBO Foundry ID Policy} and
\href{https://owlcollab.github.io/oboformat/doc/obo-syntax.html}{OBO File Specification})
\emph{AND} correspond to a known namespace of an OBO Foundry ontology (as provided
by ROBOT \href{https://robot.obolibrary.org/export-prefixes}{export-prefixes}.
These prefixes \emph{should} be up-to-date with the latest OBO Foundry ontologies
(https://github.com/ontodev/robot/issues/51).

Not all OBO formats are valid DOID formats, but all valid DOID formats \emph{ARE}
valid OBO formats.
}

\examples{
# OBO formats
obo_id <- c(
    #### valid ####
    "http://purl.obolibrary.org/obo/DOID_0001816", # URI
    "<http://purl.obolibrary.org/obo/CL_0000066>", # bracketed_URI
    "obo:DOID_4", # CURIE, standard version
    #### valid OBO property ####
    "obo:so#has_origin", # '#' separator ~ OBO annotation properties
    #### invalid ####
    "0001816", # bare number without prefix
    "obo:DOID:14566", # namespace-lui separator must be '_' ('#' for properties)
    " obo:HP_0000001" # must have NO `[:space:]` characters
)

is_valid_obo(obo_id)

# DOID formats
doid <- c(
    #### valid ####
    "http://purl.obolibrary.org/obo/DOID_0001816", # URI
    "DOID:4", # CURIE, standard version
    "obo:DOID_4", # OBO CURIE, less common
    "DOID_0040001", # basename (OBO prefix removed)
    #### invalid ####
    "0001816", # bare number without prefix
    "obo:DOID_21 ", # must have NO `[:space:]` characters
    # properties are NOT recognized as valid
    "doid:DO_IEDB_slim",
    "obo:doid#DO_IEDB_slim"
)

is_valid_doid(doid)

}
\seealso{
Other ID predicates: 
\code{\link{is_curie}()}

Other predicates: 
\code{\link{char_val_predicates}},
\code{\link{is_curie}()},
\code{\link{is_invariant}()},
\code{\link{lgl_predicates}},
\code{\link{num_val_predicates}}
}
\concept{ID predicates}
\concept{predicates}
