% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_citations_fz.R
\name{match_citations_fz}
\alias{match_citations_fz}
\title{Identify Citations of Closest Match}
\usage{
match_citations_fz(x, ref, method = "lcs", maxDist = 115, ...)
}
\arguments{
\item{x}{citations to find matches for}

\item{ref}{citations to find matches from}

\item{method}{Matching algorithm to use. See \code{\link[stringdist]{stringdist-metrics}}.}

\item{maxDist}{Elements in \code{x} will not be matched with elements of 
\code{table} if their distance is larger than \code{maxDist}. Note that the
maximum distance between strings depends on the method: it should always be
specified.}

\item{...}{arguments passed on to \code{\link[stringdist:amatch]{stringdist::amatch()}}}
}
\value{
A tibble with x, the reference most closely matching x, and the
distance between x and the reference match (based on the selected method);
columns = "x", "ref_match", "dist".
}
\description{
From two sets of citations, identifies the closes match for set 1 in set 2
below a threshold (\code{maxDist}) using fuzzy string matching.
}
\section{NOTES}{

Fuzzy string matching is \emph{SLOW}. Expect this function to take >1 min for
comparisons of more than 500 citations for all methods.

"lcs" method is faster than "osa" and seems to work better.
}

