% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse_col.R
\name{collapse_col_flex}
\alias{collapse_col_flex}
\title{Collapse Column(s) Flexibly}
\usage{
collapse_col_flex(df, ..., method = "unique", delim = "|")
}
\arguments{
\item{df}{A data.frame}

\item{...}{Column-method pairs specifying the \code{method} to use for each column
to be collapsed; column names can be bare variables or strings, methods
must be strings, e.g. column_name = method.}

\item{method}{A string identifying a function to use; one of "unique",
"first", or "last"}

\item{delim}{A delimiter to place between vector elements (default: "|").}
}
\value{
A data.frame with the specified columns collapsed. Also \strong{NOTE} the
following:
\enumerate{
\item \emph{For all methods}, rows will be reordered by the unique combination of
columns \emph{not} collapsed (due to \code{\link[dplyr:group_by]{dplyr::group_by()}} use).
\item _For "unique" method, collapsed columns \strong{will} be converted to
\code{character}.
}
}
\description{
Collapses values in the column(s) specified using a defined method for each
record, where a record is defined as a unique observation comprised of all
columns \emph{NOT} specified in \code{collapse}).
}
\examples{
cc_df <- tibble::tibble(
     x = c(1, 2, 3, 3, 4, 4, 4),
     y = c("a", "a", "b", "b", "c", "c", "e"),
     z = c("Z", "Y", "X", "X", "W", "V", "U")
)
cc_df

# completely duplicated rows (3-4) are collapsed with any column(s) specified
collapse_col_flex(cc_df, y)

# individual columns
collapse_col_flex(cc_df, z, method = "unique")
collapse_col_flex(cc_df, z, method = "first")
collapse_col_flex(cc_df, z, method = "last")

# multiple columns can be collapsed using the same method
collapse_col_flex(cc_df, x, z, method = "unique")
collapse_col_flex(cc_df, x, z, method = "first")
collapse_col_flex(cc_df, x, z, method = "last")

# ...or using different methods
collapse_col_flex(cc_df, x = "unique", z = "unique")
collapse_col_flex(cc_df, x = "first", z = "unique")
collapse_col_flex(cc_df, x = "first", z = "last")

}
