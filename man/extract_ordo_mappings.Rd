% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract.R
\name{extract_ordo_mappings}
\alias{extract_ordo_mappings}
\title{Extract mappings from ORDO}
\usage{
extract_ordo_mappings(
  ordo_path,
  as_skos = TRUE,
  output = NULL,
  tidy_what = "everything",
  col_types = NULL
)
}
\arguments{
\item{ordo_path}{The path to the ORDO file, as a string.}

\item{as_skos}{Whether to convert ORDO's annotated \code{oboInOwl:hasDbXref}
mappings to their
\href{https://www.w3.org/TR/2009/REC-skos-reference-20090818/}{Simple Knowledge Organization System (SKOS)}
equivalents, as a boolean (default: \code{TRUE}).

The ORDO-skos equivalent predicates are as follows:
\itemize{
\item \code{"BTNT"} - \code{skos:narrowMatch}
\item \code{"NTBT"} - \code{skos:broadMatch}
\item \code{"E"} - \code{skos:exactMatch}
\item \code{"ND"} - \code{doid:undefinedMatch} (supplements SKOS)
\item \code{"W"} - \code{doid:notMatch} (supplements SKOS)
}}

\item{output}{The path where output will be written, as a string, or \code{NULL}
(default) to load data directly.}

\item{tidy_what}{The elements of a SPARQL-created data.frame to tidy, as a
character vector. One or more of the following:
\itemize{
\item \code{"everything"} to apply all tidy operations (has precedence over
\code{"nothing"}).
\item \code{"header"} to remove leading \verb{?} from header labels.
\item \code{"unnest"} to unnest list columns with \code{\link[=unnest_cross]{unnest_cross()}}.
\item \code{"uri_to_curie"} to convert all URIs recognized by DO.utils to CURIEs with
\code{\link[=to_curie]{to_curie()}}.
\item \code{"lgl_NA_false"} to replace \code{NA} in logical columns with \code{FALSE}.
\item \code{"as_tibble"} to make the output a \link[tibble:tibble]{tibble}.
\item \code{"nothing"} to prevent all tidying.
}}

\item{col_types}{One of \code{NULL}, a \code{\link[readr:cols]{cols()}} specification, or
a string. See \code{vignette("readr")} for more details.

If \code{NULL}, all column types will be inferred from \code{guess_max} rows of the
input, interspersed throughout the file. This is convenient (and fast),
but not robust. If the guessed types are wrong, you'll need to increase
\code{guess_max} or supply the correct types yourself.

Column specifications created by \code{\link[=list]{list()}} or \code{\link[readr:cols]{cols()}} must contain
one column specification for each column. If you only want to read a
subset of the columns, use \code{\link[readr:cols_only]{cols_only()}}.

Alternatively, you can use a compact string representation where each
character represents one column:
\itemize{
\item c = character
\item i = integer
\item n = number
\item d = double
\item l = logical
\item f = factor
\item D = date
\item T = date time
\item t = time
\item ? = guess
\item _ or - = skip
}

By default, reading a file without a column specification will print a
message showing what \code{readr} guessed they were. To remove this message,
set \code{show_col_types = FALSE} or set `options(readr.show_col_types = FALSE).}
}
\value{
If \code{output} is specified, the path to the output file with the data.
Otherwise, the data as a \href{tibble::tibble}{tibble}.

ORDO mappings data will be formatted according to the
\href{https://github.com/mapping-commons/sssom}{SSSOM} specification,
with an additional \code{status} column indicating the status (active, deprecated,
etc.) of each ORPHA term.

If \code{as_skos = FALSE}, ORDO's text-based \code{oboInOwl:hasDbXref} annotations
denoting the type of relationship the Xref represents (simple text code only)
will be included in the \code{predicate_modifier} column.
}
\description{
Extract mappings from the Orphanet Rare Disease Ontology (ORDO). ORDO uses
\code{oboInOwl:hasDbXref} for mapping with annotations to indicate
exact/broad/narrow-ness. Utilizes \code{\link[=robot]{robot()}}.
}
