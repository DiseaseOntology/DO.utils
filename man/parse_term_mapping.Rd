% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapping.R
\name{parse_term_mapping}
\alias{parse_term_mapping}
\title{Parse Mapping for Single Term (INTERNAL)}
\usage{
parse_term_mapping(
  py_gilda_term_mappings,
  best_only = TRUE,
  warn_best_gt1 = FALSE,
  ...
)
}
\arguments{
\item{py_gilda_term_mappings}{A list of mappings between a single input term
and one or more namespace terms (stored as specialized \code{ScoredMatch}
python objects, as defined by GILDA; see \link{extract_ScoredMatch}).}

\item{best_only}{Whether to return the best scoring result(s) only, as a
boolean. \code{FALSE} will return all results. \strong{NOTE:} \code{TRUE} will return
more than one result in the case of ties.}

\item{warn_best_gt1}{Whether to warn that best mapping ties exist for
a term.}

\item{...}{
  Arguments passed on to \code{\link[=extract_ScoredMatch]{extract_ScoredMatch}}
  \describe{
    \item{\code{prefix}}{\emph{Optional} prefix to add to namespace local unique identifiers
(LUI; e.g. 4, the LUI for "disease" in DO), as a string; preferably to
create a complete namespace ID (e.g. "DOID:4").}
    \item{\code{prefix_sep}}{\emph{Optional} separator placed between \code{prefix} and
namespace LUIs, as a string. Ignored if \code{prefix = NULL}.}
  }}
}
\value{
List of data frames with the mapping result(s) for each term.
}
\description{
Parses mappings generated by \code{\link[=pyobo_map]{pyobo_map()}} or otherwise produced by the
python module \href{https://gilda.readthedocs.io/en/latest/}{GILDA} AT THE
LEVEL of a single input term.
}
