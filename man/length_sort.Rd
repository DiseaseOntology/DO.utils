% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{length_sort}
\alias{length_sort}
\alias{length_order}
\title{Sort by Character Length}
\usage{
length_sort(x, by_name = FALSE, ...)

length_order(data, cols, ...)
}
\arguments{
\item{x}{A vector.}

\item{by_name}{Whether to sort a vector by name instead of value, as a
boolean.}

\item{...}{
  Arguments passed on to \code{\link[base:order]{base::order}}
  \describe{
    \item{\code{decreasing}}{logical.  Should the sort order be increasing or
    decreasing? For the \code{"radix"} method, this can be a vector of
    length equal to the number of arguments in \code{\dots} and the
    elements are recycled as necessary.
    For the other methods, it must be length one.}
    \item{\code{na.last}}{for controlling the treatment of \code{NA}s.
    If \code{TRUE}, missing values in the data are put last; if
    \code{FALSE}, they are put first; if \code{NA}, they are removed
    (see \sQuote{Note}.)}
    \item{\code{method}}{the method to be used: partial matches are allowed.  The
    default (\code{"auto"}) implies \code{"radix"} for numeric vectors,
    integer vectors, logical vectors and factors with fewer than
    \eqn{2^{31}}{2^31} elements. Otherwise, it implies \code{"shell"}.
    For details of methods \code{"shell"}, \code{"quick"}, and \code{"radix"},
    see the help for \code{\link[base]{sort}}.}
  }}

\item{data}{A data.frame.}

\item{cols}{<\code{\link[tidyr:tidyr_tidy_select]{tidy-select}}> The columns of \code{data}
to order by.}
}
\description{
Sort a vector (\code{length_sort()}) or data.frame (\code{length_order()}) by
character length. Multiple elements of the the same length are secondarily
sorted by order of appearance.
}
\examples{
# Sorting vectors
x <- c("ccc", "aaaa", "eee", "b", "DDD")
length_sort(x)
length_sort(x, decreasing = TRUE)

x2 <- c(1:9, NA, 100, 10)
length_sort(x2)
length_sort(x2, decreasing = TRUE)
length_sort(x2, na.last = NA)

x3 <- c(bb = 333, ccc = 1, a = 22)
length_sort(x3, by_name = TRUE)

# Ordering data.frames
x <- tibble::tibble(
    x = 1:3,
    y = c("b", "aa", "c"),
    z = c("bb", "a", "c")
)

length_order(x, "y")
length_order(x, "z")
length_order(x, c("y", "z"))
length_order(x, c("y", "z"), decreasing = TRUE)

}
\seealso{
Other general utilities: 
\code{\link{max_paren_depth}()},
\code{\link{sandwich_text}()},
\code{\link{suggest_regex}()}
}
\concept{general utilities}
